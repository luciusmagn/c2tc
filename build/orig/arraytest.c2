module array_test;

import stdio as io;

type TestFunc func int32 ();

type Element struct {
    const char[16] Name;
    int32 value;
    TestFunc function;
}


func int32 generic() {
    return 0;
}

const Element[+] Elements;
Elements += { "test1", 10, generic }
Elements += { "test2", 20, generic }
Elements += { "test3", 30, generic }

Element[] elems = {
    { "t1", 1 },
    { "t2", 2 },
}

const int32 Const_a = 10;
int32 a = 20;
func int32 myfunc(int32 val) { return 2 * val; }
int32[Const_a] buf1;   // ok

public func int32 main() {
    for (int32 i=0; i<elemsof(elems); i++)
    {
        io.printf("[%2d] %16s\n", i, elems[i].Name);
        puts("test");
    }
    Element e;
    e.Name;
    Element* pe;
    pe.Name;
    return 0;
}

